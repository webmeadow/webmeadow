/*
 *  Custom webmeadow.com mixins
 *  Version: 4/12/2014
 *	Author: aaron@webmeadow.com
 *
 */

@import "variables";
 
//
// Convert into EMs 
//
@function em($target-px, $context : $size-body) {
	@return ($target-px / $context) * 1em;
}


//
// Core Images
//
@mixin img-bg($name, $dimensions, $suffix : 'png') {
	background-image: url(images/#{$name}.#{$suffix});
	background-repeat: no-repeat;
	
	// High Pixel Density
	@media only screen and (-webkit-min-device-pixel-ratio: 1.3),
	only screen and (-o-min-device-pixel-ratio: 13/10),
	only screen and (min--moz-device-pixel-ratio: 1.3),
	only screen and (min-device-pixel-ratio: 1.3),
	only screen and (min-resolution: 1.3dppx) { 
		// Set sprite to 1x dimensions
		background-image: url(images/#{$name}-2x.#{$suffix});
		@include background-size(#{$dimensions});				
	}
}


//
// Retina Images
//

// Define High Density Image Ratios
$is-hidpi: "(-webkit-min-device-pixel-ratio: 1.3), \a
(min--moz-device-pixel-ratio: 1.3), \a
(-o-min-device-pixel-ratio: 13/10), \a
(min-device-pixel-ratio: 1.3), \a
(min-resolution: 1.3dppx)";

@mixin background-size($width, $height) {
	-webkit-background-size: $width $height;
	-moz-background-size: $width $height;
	background-size: $width $height;
}

@mixin retina($file, $type, $width, $height) {
	background-image: url('images/' + $file + '.' + $type);

	@media #{$is-hidpi} {
		background-image: url('images/' + $file + '-2x.' + $type);
		@include background-size($width, $height);
	}

}


//
// Buttons
//
@mixin buttons($background : $color-btn-bg, $color : $color-btn, $color-hover : $color-btn-hover, $font : $font-script, $size : $size-btn) {
	padding: 12px 20px 10px;
	border: 0;
	color: $color;
	font-weight: normal;
	font-family: $font;
	font-size: em($size, $size-body);
	@include border-radius(12px);
	text-decoration: none;
	background: $background;

	// Hover
	&:hover,
	&:focus {
		text-decoration: none;
		color: $color-hover;
	}
}



//
// Image replacement
// Kellum Method: http://www.zeldman.com/2012/03/01/replacing-the-9999px-hack-new-image-replacement
// Additional helpers from http://html5boilerplate.com/docs/css/
// This is also included as a SASS mixin, see: sass/custom.rb
//
@mixin ir {
  // Kellum Method
  display: block !important;
  text-indent: 100%;
  white-space: nowrap;
  overflow: hidden;
  // Additional helpers
  border: 0;                     // Remove the default border from elements like <button>
  font: 0/0 a;                   // Crush the text down to take up no space
  text-shadow: none;             // Remove any text shadows
  color: transparent;            // Hide any residual text in Safari 4 and any mobile devices that may need it
  background-color: transparent; // Hide the default background color on elements like <button>
}


//
// Markup free clearing
// http://www.stubbornella.org/content/2012/05/02/cross-browser-debugging-css/
//
@mixin cf {
  overflow: hidden;   // New formatting context in better browsers
  *overflow: visible; // Protect IE7 and older from the overflow property
  *zoom: 1;           // Give IE hasLayout, a new formatting context equivalent
}


//
// element-invisible improved and more robust
//
@mixin element-invisible {
  border: 0;
  height: 1px;
  overflow: hidden;
  padding: 0;
  position: absolute !important;
  width: 1px;
  @if $legacy-support-for-ie6 or $legacy-support-for-ie7 {
    clip: rect(1px 1px 1px 1px); // IE6 and IE7 use the wrong syntax
  }
  clip: rect(1px, 1px, 1px, 1px);
}

//
// Turns off the element-invisible effect
//
@mixin element-invisible-off {
  position: static !important;
  clip: auto;
  height: auto;
  width: auto;
  overflow: auto;
}

// A slightly shorter-hand breakpoint
@mixin breakpoint($breakpoint-size) {
  @media all and (min-width: $breakpoint-size) {
    @content;
  }
}
